/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/game/create/page";
exports.ids = ["app/game/create/page"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fgame%2Fcreate%2Fpage&page=%2Fgame%2Fcreate%2Fpage&appPaths=%2Fgame%2Fcreate%2Fpage&pagePath=private-next-app-dir%2Fgame%2Fcreate%2Fpage.tsx&appDir=C%3A%5CUsers%5Csucha%5CDesktop%5Ccoding%5Ccode%5Csutda%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Csucha%5CDesktop%5Ccoding%5Ccode%5Csutda&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fgame%2Fcreate%2Fpage&page=%2Fgame%2Fcreate%2Fpage&appPaths=%2Fgame%2Fcreate%2Fpage&pagePath=private-next-app-dir%2Fgame%2Fcreate%2Fpage.tsx&appDir=C%3A%5CUsers%5Csucha%5CDesktop%5Ccoding%5Ccode%5Csutda%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Csucha%5CDesktop%5Ccoding%5Ccode%5Csutda&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/module.compiled.js?d969\");\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"originalPathname\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\"TURBOPACK { transition: next-ssr }\";\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'game',\n        {\n        children: [\n        'create',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/game/create/page.tsx */ \"(rsc)/./src/app/game/create/page.tsx\")), \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\")), \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\layout.tsx\"],\n'not-found': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23)), \"next/dist/client/components/not-found-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst originalPathname = \"/game/create/page\";\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/game/create/page\",\n        pathname: \"/game/create\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZnYW1lJTJGY3JlYXRlJTJGcGFnZSZwYWdlPSUyRmdhbWUlMkZjcmVhdGUlMkZwYWdlJmFwcFBhdGhzPSUyRmdhbWUlMkZjcmVhdGUlMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGZ2FtZSUyRmNyZWF0ZSUyRnBhZ2UudHN4JmFwcERpcj1DJTNBJTVDVXNlcnMlNUNzdWNoYSU1Q0Rlc2t0b3AlNUNjb2RpbmclNUNjb2RlJTVDc3V0ZGElNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q3N1Y2hhJTVDRGVza3RvcCU1Q2NvZGluZyU1Q2NvZGUlNUNzdXRkYSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGFBQWEsc0JBQXNCO0FBQ2lFO0FBQ3JDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyx1QkFBdUIsd0tBQXFIO0FBQzVJO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx5QkFBeUIsb0pBQXlHO0FBQ2xJLG9CQUFvQiwwTkFBZ0Y7QUFDcEc7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ3VCO0FBQzZEO0FBQ3BGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ3VEO0FBQ3ZEO0FBQ08sd0JBQXdCLDhHQUFrQjtBQUNqRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXRkYS8/NDJkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcIlRVUkJPUEFDSyB7IHRyYW5zaXRpb246IG5leHQtc3NyIH1cIjtcbmltcG9ydCB7IEFwcFBhZ2VSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1wYWdlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbi8vIFdlIGluamVjdCB0aGUgdHJlZSBhbmQgcGFnZXMgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IHRyZWUgPSB7XG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICcnLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICdnYW1lJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnY3JlYXRlJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogWydfX1BBR0VfXycsIHt9LCB7XG4gICAgICAgICAgcGFnZTogWygpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcc3VjaGFcXFxcRGVza3RvcFxcXFxjb2RpbmdcXFxcY29kZVxcXFxzdXRkYVxcXFxzcmNcXFxcYXBwXFxcXGdhbWVcXFxcY3JlYXRlXFxcXHBhZ2UudHN4XCIpLCBcIkM6XFxcXFVzZXJzXFxcXHN1Y2hhXFxcXERlc2t0b3BcXFxcY29kaW5nXFxcXGNvZGVcXFxcc3V0ZGFcXFxcc3JjXFxcXGFwcFxcXFxnYW1lXFxcXGNyZWF0ZVxcXFxwYWdlLnRzeFwiXSxcbiAgICAgICAgICBcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgfVxuICAgICAgXVxuICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICdsYXlvdXQnOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxzdWNoYVxcXFxEZXNrdG9wXFxcXGNvZGluZ1xcXFxjb2RlXFxcXHN1dGRhXFxcXHNyY1xcXFxhcHBcXFxcbGF5b3V0LnRzeFwiKSwgXCJDOlxcXFxVc2Vyc1xcXFxzdWNoYVxcXFxEZXNrdG9wXFxcXGNvZGluZ1xcXFxjb2RlXFxcXHN1dGRhXFxcXHNyY1xcXFxhcHBcXFxcbGF5b3V0LnRzeFwiXSxcbidub3QtZm91bmQnOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWVycm9yXCIpLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIl0sXG4gICAgICAgIFxuICAgICAgfVxuICAgICAgXVxuICAgICAgfS5jaGlsZHJlbjtcbmNvbnN0IHBhZ2VzID0gW1wiQzpcXFxcVXNlcnNcXFxcc3VjaGFcXFxcRGVza3RvcFxcXFxjb2RpbmdcXFxcY29kZVxcXFxzdXRkYVxcXFxzcmNcXFxcYXBwXFxcXGdhbWVcXFxcY3JlYXRlXFxcXHBhZ2UudHN4XCJdO1xuZXhwb3J0IHsgdHJlZSwgcGFnZXMgfTtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2xvYmFsRXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2Vycm9yLWJvdW5kYXJ5XCI7XG5jb25zdCBfX25leHRfYXBwX3JlcXVpcmVfXyA9IF9fd2VicGFja19yZXF1aXJlX19cbmNvbnN0IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcbmV4cG9ydCBjb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvZ2FtZS9jcmVhdGUvcGFnZVwiO1xuZXhwb3J0IGNvbnN0IF9fbmV4dF9hcHBfXyA9IHtcbiAgICByZXF1aXJlOiBfX25leHRfYXBwX3JlcXVpcmVfXyxcbiAgICBsb2FkQ2h1bms6IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fXG59O1xuZXhwb3J0ICogZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvYXBwLXJlbmRlci9lbnRyeS1iYXNlXCI7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBQYWdlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9QQUdFLFxuICAgICAgICBwYWdlOiBcIi9nYW1lL2NyZWF0ZS9wYWdlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9nYW1lL2NyZWF0ZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiLFxuICAgICAgICBhcHBQYXRoczogW11cbiAgICB9LFxuICAgIHVzZXJsYW5kOiB7XG4gICAgICAgIGxvYWRlclRyZWU6IHRyZWVcbiAgICB9XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXBhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fgame%2Fcreate%2Fpage&page=%2Fgame%2Fcreate%2Fpage&appPaths=%2Fgame%2Fcreate%2Fpage&pagePath=private-next-app-dir%2Fgame%2Fcreate%2Fpage.tsx&appDir=C%3A%5CUsers%5Csucha%5CDesktop%5Ccoding%5Ccode%5Csutda%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Csucha%5CDesktop%5Ccoding%5Ccode%5Csutda&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Capp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Capp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/app-router.js */ \"(ssr)/./node_modules/next/dist/client/components/app-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/not-found-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/not-found-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q3N1Y2hhJTVDJTVDRGVza3RvcCU1QyU1Q2NvZGluZyU1QyU1Q2NvZGUlNUMlNUNzdXRkYSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2FwcC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDc3VjaGElNUMlNUNEZXNrdG9wJTVDJTVDY29kaW5nJTVDJTVDY29kZSU1QyU1Q3N1dGRhJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDc3VjaGElNUMlNUNEZXNrdG9wJTVDJTVDY29kaW5nJTVDJTVDY29kZSU1QyU1Q3N1dGRhJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDZXJyb3ItYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDc3VjaGElNUMlNUNEZXNrdG9wJTVDJTVDY29kaW5nJTVDJTVDY29kZSU1QyU1Q3N1dGRhJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDbGF5b3V0LXJvdXRlci5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNzdWNoYSU1QyU1Q0Rlc2t0b3AlNUMlNUNjb2RpbmclNUMlNUNjb2RlJTVDJTVDc3V0ZGElNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNub3QtZm91bmQtYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDc3VjaGElNUMlNUNEZXNrdG9wJTVDJTVDY29kaW5nJTVDJTVDY29kZSU1QyU1Q3N1dGRhJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsa09BQWdKO0FBQ2hKO0FBQ0Esb09BQWlKO0FBQ2pKO0FBQ0EsME9BQW9KO0FBQ3BKO0FBQ0Esd09BQW1KO0FBQ25KO0FBQ0Esa1BBQXdKO0FBQ3hKO0FBQ0Esc1FBQWtLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3V0ZGEvPzYwMzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxzdWNoYVxcXFxEZXNrdG9wXFxcXGNvZGluZ1xcXFxjb2RlXFxcXHN1dGRhXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcYXBwLXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcc3VjaGFcXFxcRGVza3RvcFxcXFxjb2RpbmdcXFxcY29kZVxcXFxzdXRkYVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxzdWNoYVxcXFxEZXNrdG9wXFxcXGNvZGluZ1xcXFxjb2RlXFxcXHN1dGRhXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXHN1Y2hhXFxcXERlc2t0b3BcXFxcY29kaW5nXFxcXGNvZGVcXFxcc3V0ZGFcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxzdWNoYVxcXFxEZXNrdG9wXFxcXGNvZGluZ1xcXFxjb2RlXFxcXHN1dGRhXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbm90LWZvdW5kLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxzdWNoYVxcXFxEZXNrdG9wXFxcXGNvZGluZ1xcXFxjb2RlXFxcXHN1dGRhXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxccmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Capp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Csrc%5C%5Capp%5C%5Cgame%5C%5Ccreate%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Csrc%5C%5Capp%5C%5Cgame%5C%5Ccreate%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/game/create/page.tsx */ \"(ssr)/./src/app/game/create/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q3N1Y2hhJTVDJTVDRGVza3RvcCU1QyU1Q2NvZGluZyU1QyU1Q2NvZGUlNUMlNUNzdXRkYSU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q2dhbWUlNUMlNUNjcmVhdGUlNUMlNUNwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsd0tBQXFIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3V0ZGEvPzE5OTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxzdWNoYVxcXFxEZXNrdG9wXFxcXGNvZGluZ1xcXFxjb2RlXFxcXHN1dGRhXFxcXHNyY1xcXFxhcHBcXFxcZ2FtZVxcXFxjcmVhdGVcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Csrc%5C%5Capp%5C%5Cgame%5C%5Ccreate%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Csucha%5C%5CDesktop%5C%5Ccoding%5C%5Ccode%5C%5Csutda%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./src/app/game/create/page.tsx":
/*!**************************************!*\
  !*** ./src/app/game/create/page.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CreateGamePage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _lib_gameApi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/gameApi */ \"(ssr)/./src/lib/gameApi.ts\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hot-toast */ \"(ssr)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\nfunction CreateGamePage() {\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const [isCreating, setIsCreating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleCreateGame = async ()=>{\n        setIsCreating(true);\n        setError(null);\n        try {\n            // 기본 게스트 이름으로 게임 생성 (닉네임 입력 없이)\n            const { gameId } = await (0,_lib_gameApi__WEBPACK_IMPORTED_MODULE_3__.createGame)(\"관찰자\");\n            // 성공 시 게임 페이지로 이동\n            router.push(`/game/${gameId}`);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.success(\"게임이 생성되었습니다. 빈 자리를 클릭하여 참가하세요.\");\n        } catch (err) {\n            console.error(\"게임 생성 오류:\", err);\n            setError(\"게임을 생성할 수 없습니다. 다시 시도해주세요.\");\n        } finally{\n            setIsCreating(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen flex items-center justify-center bg-gray-950 p-4\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full max-w-md p-8 bg-gray-900 rounded-lg shadow-lg border border-yellow-800\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                    className: \"text-2xl font-bold text-center text-yellow-400 mb-6\",\n                    children: \"섯다 게임 생성\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\",\n                    lineNumber: 36,\n                    columnNumber: 9\n                }, this),\n                error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-red-600 text-white p-3 rounded-md mb-4\",\n                    children: error\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\",\n                    lineNumber: 39,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: handleCreateGame,\n                    disabled: isCreating,\n                    className: `w-full py-3 bg-gradient-to-r from-yellow-600 to-yellow-700 hover:from-yellow-500 hover:to-yellow-600 text-white font-bold rounded-md shadow-lg transition-all ${isCreating ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n                    children: isCreating ? \"생성 중...\" : \"게임 생성하기\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\",\n                    lineNumber: 44,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"mt-4 text-gray-400 text-sm text-center\",\n                    children: [\n                        \"게임을 생성하면 관찰자 모드로 시작됩니다.\",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\",\n                            lineNumber: 55,\n                            columnNumber: 34\n                        }, this),\n                        \"빈 자리를 클릭하여 게임에 참가할 수 있습니다.\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\",\n                    lineNumber: 54,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\",\n            lineNumber: 35,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\game\\\\create\\\\page.tsx\",\n        lineNumber: 34,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2dhbWUvY3JlYXRlL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUVpQztBQUNXO0FBQ0Q7QUFDSDtBQUV6QixTQUFTSTtJQUN0QixNQUFNQyxTQUFTSiwwREFBU0E7SUFDeEIsTUFBTSxDQUFDSyxZQUFZQyxjQUFjLEdBQUdQLCtDQUFRQSxDQUFDO0lBQzdDLE1BQU0sQ0FBQ1EsT0FBT0MsU0FBUyxHQUFHVCwrQ0FBUUEsQ0FBZ0I7SUFFbEQsTUFBTVUsbUJBQW1CO1FBQ3ZCSCxjQUFjO1FBQ2RFLFNBQVM7UUFFVCxJQUFJO1lBQ0YsZ0NBQWdDO1lBQ2hDLE1BQU0sRUFBRUUsTUFBTSxFQUFFLEdBQUcsTUFBTVQsd0RBQVVBLENBQUM7WUFFcEMsa0JBQWtCO1lBQ2xCRyxPQUFPTyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUVELE9BQU8sQ0FBQztZQUU3QlIsa0RBQUtBLENBQUNVLE9BQU8sQ0FBQztRQUNoQixFQUFFLE9BQU9DLEtBQUs7WUFDWkMsUUFBUVAsS0FBSyxDQUFDLGFBQWFNO1lBQzNCTCxTQUFTO1FBQ1gsU0FBVTtZQUNSRixjQUFjO1FBQ2hCO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ1M7UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ0Q7WUFBSUMsV0FBVTs7OEJBQ2IsOERBQUNDO29CQUFHRCxXQUFVOzhCQUFzRDs7Ozs7O2dCQUVuRVQsdUJBQ0MsOERBQUNRO29CQUFJQyxXQUFVOzhCQUNaVDs7Ozs7OzhCQUlMLDhEQUFDVztvQkFDQ0MsU0FBU1Y7b0JBQ1RXLFVBQVVmO29CQUNWVyxXQUFXLENBQUMsOEpBQThKLEVBQ3hLWCxhQUFhLGtDQUFrQyxHQUNoRCxDQUFDOzhCQUVEQSxhQUFhLFlBQVk7Ozs7Ozs4QkFHNUIsOERBQUNnQjtvQkFBRUwsV0FBVTs7d0JBQXlDO3NDQUM3Qiw4REFBQ007Ozs7O3dCQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXRkYS8uL3NyYy9hcHAvZ2FtZS9jcmVhdGUvcGFnZS50c3g/MjgxYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XHJcblxyXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJztcclxuaW1wb3J0IHsgY3JlYXRlR2FtZSB9IGZyb20gJ0AvbGliL2dhbWVBcGknO1xyXG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gJ3JlYWN0LWhvdC10b2FzdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDcmVhdGVHYW1lUGFnZSgpIHtcclxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcclxuICBjb25zdCBbaXNDcmVhdGluZywgc2V0SXNDcmVhdGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcclxuICBcclxuICBjb25zdCBoYW5kbGVDcmVhdGVHYW1lID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgc2V0SXNDcmVhdGluZyh0cnVlKTtcclxuICAgIHNldEVycm9yKG51bGwpO1xyXG4gICAgXHJcbiAgICB0cnkge1xyXG4gICAgICAvLyDquLDrs7gg6rKM7Iqk7Yq4IOydtOumhOycvOuhnCDqsozsnoQg7IOd7ISxICjri4nrhKTsnoQg7J6F66ClIOyXhuydtClcclxuICAgICAgY29uc3QgeyBnYW1lSWQgfSA9IGF3YWl0IGNyZWF0ZUdhbWUoJ+q0gOywsOyekCcpO1xyXG4gICAgICBcclxuICAgICAgLy8g7ISx6rO1IOyLnCDqsozsnoQg7Y6Y7J207KeA66GcIOydtOuPmVxyXG4gICAgICByb3V0ZXIucHVzaChgL2dhbWUvJHtnYW1lSWR9YCk7XHJcbiAgICAgIFxyXG4gICAgICB0b2FzdC5zdWNjZXNzKCfqsozsnoTsnbQg7IOd7ISx65CY7JeI7Iq164uI64ukLiDruYgg7J6Q66as66W8IO2BtOumre2VmOyXrCDssLjqsIDtlZjshLjsmpQuJyk7XHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcign6rKM7J6EIOyDneyEsSDsmKTrpZg6JywgZXJyKTtcclxuICAgICAgc2V0RXJyb3IoJ+qyjOyehOydhCDsg53shLHtlaAg7IiYIOyXhuyKteuLiOuLpC4g64uk7IucIOyLnOuPhO2VtOyjvOyEuOyalC4nKTtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgIHNldElzQ3JlYXRpbmcoZmFsc2UpO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJnLWdyYXktOTUwIHAtNFwiPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInctZnVsbCBtYXgtdy1tZCBwLTggYmctZ3JheS05MDAgcm91bmRlZC1sZyBzaGFkb3ctbGcgYm9yZGVyIGJvcmRlci15ZWxsb3ctODAwXCI+XHJcbiAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWNlbnRlciB0ZXh0LXllbGxvdy00MDAgbWItNlwiPuyEr+uLpCDqsozsnoQg7IOd7ISxPC9oMT5cclxuICAgICAgICBcclxuICAgICAgICB7ZXJyb3IgJiYgKFxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1yZWQtNjAwIHRleHQtd2hpdGUgcC0zIHJvdW5kZWQtbWQgbWItNFwiPlxyXG4gICAgICAgICAgICB7ZXJyb3J9XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApfVxyXG4gICAgICAgIFxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNyZWF0ZUdhbWV9XHJcbiAgICAgICAgICBkaXNhYmxlZD17aXNDcmVhdGluZ31cclxuICAgICAgICAgIGNsYXNzTmFtZT17YHctZnVsbCBweS0zIGJnLWdyYWRpZW50LXRvLXIgZnJvbS15ZWxsb3ctNjAwIHRvLXllbGxvdy03MDAgaG92ZXI6ZnJvbS15ZWxsb3ctNTAwIGhvdmVyOnRvLXllbGxvdy02MDAgdGV4dC13aGl0ZSBmb250LWJvbGQgcm91bmRlZC1tZCBzaGFkb3ctbGcgdHJhbnNpdGlvbi1hbGwgJHtcclxuICAgICAgICAgICAgaXNDcmVhdGluZyA/ICdvcGFjaXR5LTUwIGN1cnNvci1ub3QtYWxsb3dlZCcgOiAnJ1xyXG4gICAgICAgICAgfWB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAge2lzQ3JlYXRpbmcgPyAn7IOd7ISxIOykkS4uLicgOiAn6rKM7J6EIOyDneyEse2VmOq4sCd9XHJcbiAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPHAgY2xhc3NOYW1lPVwibXQtNCB0ZXh0LWdyYXktNDAwIHRleHQtc20gdGV4dC1jZW50ZXJcIj5cclxuICAgICAgICAgIOqyjOyehOydhCDsg53shLHtlZjrqbQg6rSA7LCw7J6QIOuqqOuTnOuhnCDsi5zsnpHrkKnri4jri6QuPGJyIC8+XHJcbiAgICAgICAgICDruYgg7J6Q66as66W8IO2BtOumre2VmOyXrCDqsozsnoTsl5Ag7LC46rCA7ZWgIOyImCDsnojsirXri4jri6QuXHJcbiAgICAgICAgPC9wPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn0gIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlUm91dGVyIiwiY3JlYXRlR2FtZSIsInRvYXN0IiwiQ3JlYXRlR2FtZVBhZ2UiLCJyb3V0ZXIiLCJpc0NyZWF0aW5nIiwic2V0SXNDcmVhdGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJoYW5kbGVDcmVhdGVHYW1lIiwiZ2FtZUlkIiwicHVzaCIsInN1Y2Nlc3MiLCJlcnIiLCJjb25zb2xlIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDEiLCJidXR0b24iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJwIiwiYnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/app/game/create/page.tsx\n");

/***/ }),

/***/ "(ssr)/./src/lib/gameApi.ts":
/*!****************************!*\
  !*** ./src/lib/gameApi.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoSelectFinalCards: () => (/* binding */ autoSelectFinalCards),\n/* harmony export */   betAction: () => (/* binding */ betAction),\n/* harmony export */   createGame: () => (/* binding */ createGame),\n/* harmony export */   finishBettingRound: () => (/* binding */ finishBettingRound),\n/* harmony export */   finishGame: () => (/* binding */ finishGame),\n/* harmony export */   getGameState: () => (/* binding */ getGameState),\n/* harmony export */   handleBettingTimeout: () => (/* binding */ handleBettingTimeout),\n/* harmony export */   joinGame: () => (/* binding */ joinGame),\n/* harmony export */   placeBet: () => (/* binding */ placeBet),\n/* harmony export */   selectFinalCards: () => (/* binding */ selectFinalCards),\n/* harmony export */   sendMessage: () => (/* binding */ sendMessage),\n/* harmony export */   startGame: () => (/* binding */ startGame),\n/* harmony export */   updateSeat: () => (/* binding */ updateSeat)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(ssr)/./src/lib/supabase.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var _utils_gameLogic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/gameLogic */ \"(ssr)/./src/utils/gameLogic.ts\");\n/* harmony import */ var _logService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logService */ \"(ssr)/./src/lib/logService.ts\");\n\n\n\n\n// 상수 정의 (파일 상단에 추가)\nconst REGAME_WAIT_TIME_MS = 5000; // 재경기 대기 시간 (5초)\nconst BETTING_TIME_LIMIT_MS = 30000; // 베팅 제한 시간 (30초)\nconst CARD_SELECTION_TIME_LIMIT_MS = 20000; // 카드 선택 제한 시간 (20초)\n// 오류 타입 상수 정의\nconst ErrorType = {\n    DB_ERROR: \"database_error\",\n    GAME_NOT_FOUND: \"game_not_found\",\n    PLAYER_NOT_FOUND: \"player_not_found\",\n    INVALID_ACTION: \"invalid_action\",\n    INVALID_STATE: \"invalid_state\",\n    INVALID_TURN: \"invalid_turn\",\n    NETWORK_ERROR: \"network_error\",\n    TIMEOUT_ERROR: \"timeout_error\",\n    UNKNOWN_ERROR: \"unknown_error\",\n    GAME_ACTION_ERROR: \"game_action_error\"\n};\n/**\n * 게임 API 오류 처리 유틸리티\n * 오류 타입에 따라 일관된 형식의 오류 객체를 생성\n */ function handleGameError(error, errorType = ErrorType.UNKNOWN_ERROR, context = \"\") {\n    // 오류 정보 구조화\n    const timestamp = new Date().toISOString();\n    const errorId = `error_${Math.random().toString(36).substr(2, 9)}`;\n    // 오류 로깅\n    console.error(`[${timestamp}] [${errorId}] [${errorType}] ${context}:`, error);\n    // 사용자 친화적 오류 메시지 생성\n    let userMessage = \"알 수 없는 오류가 발생했습니다. 잠시 후 다시 시도해주세요.\";\n    switch(errorType){\n        case ErrorType.DB_ERROR:\n            userMessage = \"데이터베이스 연결 중 오류가 발생했습니다.\";\n            break;\n        case ErrorType.GAME_NOT_FOUND:\n            userMessage = \"게임을 찾을 수 없습니다.\";\n            break;\n        case ErrorType.PLAYER_NOT_FOUND:\n            userMessage = \"플레이어 정보를 찾을 수 없습니다.\";\n            break;\n        case ErrorType.INVALID_ACTION:\n            userMessage = \"유효하지 않은 액션입니다.\";\n            break;\n        case ErrorType.INVALID_STATE:\n            userMessage = \"현재 게임 상태에서는 해당 액션을 수행할 수 없습니다.\";\n            break;\n        case ErrorType.INVALID_TURN:\n            userMessage = \"현재 당신의 차례가 아닙니다.\";\n            break;\n        case ErrorType.NETWORK_ERROR:\n            userMessage = \"네트워크 연결에 문제가 발생했습니다. 연결 상태를 확인해주세요.\";\n            break;\n        case ErrorType.TIMEOUT_ERROR:\n            userMessage = \"요청 시간이 초과되었습니다. 잠시 후 다시 시도해주세요.\";\n            break;\n    }\n    // 개발용 정보 추가한 확장 오류 객체 생성\n    const gameError = new Error(userMessage);\n    gameError.errorType = errorType;\n    gameError.errorId = errorId;\n    gameError.timestamp = timestamp;\n    gameError.originalError = error;\n    return gameError;\n}\n/**\n * 데이터베이스 오류를 처리하는 전용 함수\n */ function handleDatabaseError(error, context = \"\") {\n    return handleGameError(error, ErrorType.DB_ERROR, `DB 오류 (${context})`);\n}\n/**\n * 자원 조회 실패(게임, 플레이어 등)를 처리하는 함수\n */ function handleResourceNotFoundError(resourceType, resourceId, error = null) {\n    const errorType = resourceType === \"game\" ? ErrorType.GAME_NOT_FOUND : ErrorType.PLAYER_NOT_FOUND;\n    return handleGameError(error, errorType, `${resourceType} ${resourceId} 조회 실패`);\n}\n/**\n * 새로운 게임 생성\n */ async function createGame(username) {\n    try {\n        const gameId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n        const playerId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n        const timestamp = new Date().toISOString();\n        // 게임 생성\n        const { error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").insert({\n            id: gameId,\n            status: \"waiting\",\n            current_turn: null,\n            winner: null,\n            created_at: timestamp,\n            updated_at: timestamp,\n            show_cards: false,\n            betting_value: 0,\n            total_pot: 0,\n            base_bet: 10,\n            game_mode: 2,\n            betting_round: 1 // 기본 1라운드\n        });\n        if (gameError) {\n            throw handleDatabaseError(gameError, \"createGame\");\n        }\n        // 플레이어 생성\n        const { error: playerError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").insert({\n            id: playerId,\n            game_id: gameId,\n            user_id: (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n            username: username,\n            balance: 1000,\n            created_at: timestamp,\n            updated_at: timestamp,\n            seat_index: 0 // 기본 좌석 인덱스 0\n        });\n        if (playerError) {\n            throw handleDatabaseError(playerError, \"createGame player\");\n        }\n        // 게임 생성 로그 기록\n        await (0,_logService__WEBPACK_IMPORTED_MODULE_2__.logInfo)(gameId, \"game\", `게임 생성: ${username}(이)가 생성함`, playerId, {\n            username\n        });\n        return {\n            gameId,\n            playerId\n        };\n    } catch (error) {\n        console.error(\"게임 생성 중 오류:\", error);\n        // gameId가 정의되지 않은 경우 빈 문자열 사용\n        await (0,_logService__WEBPACK_IMPORTED_MODULE_2__.logSystemError)(\"\", \"createGame\", error);\n        throw handleGameError(error, ErrorType.DB_ERROR, \"게임 생성 중 오류\");\n    }\n}\n/**\n * 기존 게임에 참가\n */ async function joinGame(gameId, username, seatIndex) {\n    try {\n        // 게임 상태 체크\n        const { data: gameData, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"*\").eq(\"id\", gameId).single();\n        if (gameError || !gameData) {\n            throw handleResourceNotFoundError(\"game\", gameId, gameError);\n        }\n        // 로컬 스토리지에서 사용자 ID와 플레이어 ID 확인\n        const storedUserId = localStorage.getItem(`game_${gameId}_user_id`);\n        const storedPlayerId = localStorage.getItem(`game_${gameId}_player_id`);\n        // 기존 참여자인지 확인\n        if (storedUserId && storedPlayerId) {\n            // 기존 플레이어 정보 조회\n            const { data: existingPlayer, error: existingPlayerError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"game_id\", gameId).eq(\"id\", storedPlayerId).single();\n            if (!existingPlayerError && existingPlayer) {\n                console.log(\"기존 플레이어로 재접속:\", existingPlayer.id);\n                // 이름 업데이트가 필요한 경우\n                if (existingPlayer.username !== username) {\n                    await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n                        username\n                    }).eq(\"id\", existingPlayer.id);\n                }\n                // 최신 게임 상태 가져오기\n                const gameState = await getGameState(gameId);\n                return {\n                    playerId: existingPlayer.id,\n                    gameState,\n                    rejoined: true\n                };\n            }\n        }\n        // 새 플레이어 참가 (게임이 대기 중일 때만)\n        if (gameData.status !== \"waiting\") {\n            throw handleGameError(null, ErrorType.INVALID_STATE, \"joinGame\");\n        }\n        const playerId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n        // 임시 사용자 ID 생성\n        const userId = `user_${Math.random().toString(36).substring(2, 9)}`;\n        // 플레이어 생성\n        const { data: playerData, error: playerError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").insert({\n            id: playerId,\n            game_id: gameId,\n            user_id: userId,\n            username,\n            balance: 10000,\n            is_die: false,\n            seat_index: seatIndex\n        }).select();\n        if (playerError) {\n            throw handleDatabaseError(playerError, \"joinGame\");\n        }\n        console.log(\"플레이어 참가 성공:\", playerId);\n        // 로컬 스토리지에 사용자 정보 저장\n        localStorage.setItem(`game_${gameId}_user_id`, userId);\n        localStorage.setItem(`game_${gameId}_player_id`, playerId);\n        // 최신 게임 상태 가져오기\n        const gameState = await getGameState(gameId);\n        return {\n            playerId,\n            gameState\n        };\n    } catch (err) {\n        console.error(\"게임 참가 중 예외 발생:\", err);\n        throw err;\n    }\n}\n/**\n * 게임 상태 조회\n */ async function getGameState(gameId) {\n    // 게임 정보 가져오기\n    const { data: gameData, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"*\").eq(\"id\", gameId).single();\n    if (gameError || !gameData) {\n        throw handleResourceNotFoundError(\"game\", gameId, gameError);\n    }\n    // 플레이어 정보 가져오기\n    const { data: playersData, error: playersError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"game_id\", gameId);\n    if (playersError) {\n        throw handleDatabaseError(playersError, \"getGameState\");\n    }\n    // 재경기 남은 시간 계산\n    let regameRemainingTime = undefined;\n    if (gameData.status === \"regame\" && gameData.regame_start_time && gameData.regame_wait_time) {\n        const startTime = new Date(gameData.regame_start_time).getTime();\n        const currentTime = new Date().getTime();\n        const elapsedMs = currentTime - startTime;\n        const remainingMs = Math.max(0, gameData.regame_wait_time - elapsedMs);\n        regameRemainingTime = Math.ceil(remainingMs / 1000);\n    }\n    // 게임 상태 정보 포맷팅\n    const gameState = {\n        id: gameData.id,\n        status: gameData.status,\n        players: playersData.map((player)=>({\n                id: player.id,\n                user_id: player.user_id,\n                username: player.username,\n                balance: player.balance,\n                cards: player.cards || [],\n                isDie: player.is_die,\n                seat_index: player.seat_index\n            })),\n        currentTurn: gameData.current_turn || \"\",\n        winner: gameData.winner,\n        bettingValue: gameData.betting_value,\n        regame_remaining_time: regameRemainingTime,\n        regame_start_time: gameData.regame_start_time\n    };\n    return gameState;\n}\n/**\n * 게임 시작\n */ async function startGame(gameId) {\n    try {\n        // 게임 정보 조회\n        const { data: gameData, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"*, rooms(*)\").eq(\"id\", gameId).single();\n        if (gameError || !gameData) {\n            throw handleResourceNotFoundError(\"game\", gameId, gameError);\n        }\n        const roomData = gameData.rooms;\n        const gameMode = roomData.mode;\n        // 참여 플레이어 조회\n        const { data: playersData, error: playersError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"game_id\", gameId).is(\"is_die\", false);\n        if (playersError) {\n            throw handleDatabaseError(playersError, \"startGame\");\n        }\n        // 최소 2명 이상 참여 확인\n        if (playersData.length < 2) {\n            throw handleGameError(null, ErrorType.INVALID_STATE, \"startGame\");\n        }\n        // 카드 덱 생성 및 셔플\n        const deck = createShuffledDeck();\n        // 2장 모드와 3장 모드에 따라 다르게 처리\n        if (gameMode === 2) {\n            // 2장 모드: 플레이어당 2장씩 배분\n            for(let i = 0; i < playersData.length; i++){\n                const playerCards = [\n                    deck.pop(),\n                    deck.pop()\n                ];\n                await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n                    cards: playerCards,\n                    is_die: false\n                }).eq(\"id\", playersData[i].id);\n            }\n        } else if (gameMode === 3) {\n            // 3장 모드: 플레이어당 2장씩 먼저 배분 (모두 비공개)\n            for(let i = 0; i < playersData.length; i++){\n                const playerCards = [\n                    deck.pop(),\n                    deck.pop()\n                ];\n                await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n                    cards: playerCards,\n                    open_card: null,\n                    selected_cards: null,\n                    is_die: false\n                }).eq(\"id\", playersData[i].id);\n            }\n        }\n        // 첫 번째 플레이어부터 시작\n        const firstPlayerId = playersData[0].id;\n        // 게임 상태 업데이트\n        await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n            status: \"playing\",\n            current_turn: firstPlayerId,\n            betting_round: 1,\n            base_bet: 1000,\n            betting_value: 0,\n            winner: null,\n            total_pot: playersData.length * roomData.entry_fee // 참가비를 합한 초기 팟\n        }).eq(\"id\", gameId);\n        // 게임 시작 액션 기록\n        await recordGameAction(gameId, \"start\", null);\n        console.log(`게임 시작: ${gameId} (${gameMode}장 모드)`);\n        // 베팅 타임아웃 설정\n        setTimeout(async ()=>{\n            try {\n                // 게임 상태 다시 확인 (중간에 게임이 종료되었을 수 있음)\n                const { data: currentGame, error: currentGameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"status, current_turn, betting_end_time, betting_round\").eq(\"id\", gameId).single();\n                if (currentGameError) {\n                    console.error(\"게임 상태 확인 중 오류:\", currentGameError);\n                    return;\n                }\n                // 게임이 아직 진행 중이고 베팅 타임아웃이 끝났으면 베팅 타임아웃 처리\n                if (currentGame && currentGame.status === \"playing\" && currentGame.current_turn === firstPlayerId && new Date(currentGame.betting_end_time) <= new Date()) {\n                    console.log(`게임 ${gameId}: 베팅 타임아웃, 자동 폴드 처리`);\n                    await handleBettingTimeout(gameId);\n                }\n            } catch (err) {\n                console.error(\"베팅 타임아웃 처리 중 오류:\", err);\n            }\n        }, BETTING_TIME_LIMIT_MS);\n    } catch (error) {\n        console.error(\"게임 시작 중 오류 발생:\", error);\n        throw error;\n    }\n}\n/**\n * 베팅\n */ async function placeBet(gameId, playerId, actionType, amount) {\n    try {\n        // betAction 함수를 호출하여 베팅 처리\n        await betAction(gameId, playerId, actionType, amount || 0);\n    } catch (error) {\n        console.error(\"베팅 중 오류:\", error);\n        throw error;\n    }\n}\n// 모든 플레이어가 동일한 금액을 배팅했는지 확인\nasync function checkAllPlayersMatchedBet(gameId, players) {\n    const activePlayers = players.filter((p)=>!p.isDie);\n    if (activePlayers.length <= 1) {\n        return true;\n    }\n    // 게임 시작 이후 각 플레이어별 마지막 베팅 가져오기\n    const playerLastBets = {};\n    for (const player of activePlayers){\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"game_actions\").select(\"*\").eq(\"game_id\", gameId).eq(\"player_id\", player.id).in(\"action_type\", [\n            \"bet\",\n            \"call\",\n            \"raise\",\n            \"half\",\n            \"check\"\n        ]).order(\"created_at\", {\n            ascending: false\n        }).limit(1);\n        if (error || !data || data.length === 0) {\n            return false; // 데이터가 없으면 아직 일치하지 않음\n        }\n        playerLastBets[player.id] = data[0].amount || 0;\n    }\n    // 베팅액이 모두 같은지 확인\n    const betAmounts = Object.values(playerLastBets);\n    return betAmounts.every((amount)=>amount === betAmounts[0]);\n}\n// 다음 플레이어 턴 가져오기\nfunction getNextPlayerTurn(players, currentPlayerId) {\n    const activePlayers = players.filter((p)=>!p.isDie);\n    if (activePlayers.length <= 1) {\n        return \"\";\n    }\n    const currentIndex = activePlayers.findIndex((p)=>p.id === currentPlayerId);\n    const nextIndex = (currentIndex + 1) % activePlayers.length;\n    return activePlayers[nextIndex].id;\n}\n/**\n * 메시지 전송\n */ async function sendMessage(gameId, playerId, content) {\n    if (!content.trim()) {\n        throw handleGameError(null, ErrorType.INVALID_ACTION, \"sendMessage\");\n    }\n    // 플레이어 정보 가져오기\n    const { data: playerData, error: playerError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"username, user_id\").eq(\"id\", playerId).single();\n    if (playerError || !playerData) {\n        throw handleResourceNotFoundError(\"player\", playerId, playerError);\n    }\n    // 메시지 ID 생성\n    const messageId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    const timestamp = new Date().toISOString();\n    // 메시지 객체 생성\n    const messageData = {\n        id: messageId,\n        game_id: gameId,\n        user_id: playerData.user_id,\n        username: playerData.username,\n        content: content,\n        created_at: timestamp\n    };\n    // 메시지 저장\n    const { error: messageError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"messages\").insert(messageData);\n    if (messageError) {\n        throw handleDatabaseError(messageError, \"sendMessage\");\n    }\n}\n/**\n * 게임 액션 기록\n */ async function recordGameAction(gameId, actionType, playerId, amount, bettingRound) {\n    try {\n        const id = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"game_actions\").insert({\n            id,\n            game_id: gameId,\n            action_type: actionType,\n            player_id: playerId,\n            amount,\n            betting_round: bettingRound,\n            created_at: new Date().toISOString()\n        });\n        if (error) {\n            throw handleDatabaseError(error, \"Recording game action\");\n        }\n    } catch (error) {\n        console.error(\"Error recording game action:\", error);\n        throw handleGameError(error, ErrorType.GAME_ACTION_ERROR, \"Failed to record game action\");\n    }\n}\n/**\n * 셔플된 카드 덱 생성\n */ function createShuffledDeck() {\n    // 1부터 20까지의 카드 생성 (섯다 카드)\n    const deck = Array.from({\n        length: 20\n    }, (_, i)=>i + 1);\n    // 덱 셔플 (Fisher-Yates 알고리즘)\n    for(let i = deck.length - 1; i > 0; i--){\n        const j = Math.floor(Math.random() * (i + 1));\n        [deck[i], deck[j]] = [\n            deck[j],\n            deck[i]\n        ];\n    }\n    return deck;\n}\n/**\n * 모든 플레이어가 턴을 가졌는지 확인\n */ async function checkAllPlayersHadTurn(gameId, players) {\n    const activePlayers = players.filter((p)=>!p.isDie);\n    // 게임 시작 이후 각 플레이어별 가장 최근 액션 확인\n    const playerLastActions = new Set();\n    // 게임의 마지막 라운드 시작 시간 찾기 (start 액션 또는 가장 오래된 베팅 액션)\n    const { data: startAction, error: startError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"game_actions\").select(\"created_at\").eq(\"game_id\", gameId).eq(\"action_type\", \"start\").order(\"created_at\", {\n        ascending: false\n    }).limit(1);\n    if (startError) {\n        console.error(\"게임 시작 액션 조회 오류:\", startError);\n        return false;\n    }\n    const roundStartTime = startAction && startAction.length > 0 ? startAction[0].created_at : new Date(0).toISOString();\n    // 각 활성 플레이어별로 마지막 액션 확인\n    for (const player of activePlayers){\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"game_actions\").select(\"player_id\").eq(\"game_id\", gameId).eq(\"player_id\", player.id).in(\"action_type\", [\n            \"bet\",\n            \"call\",\n            \"raise\",\n            \"half\",\n            \"check\",\n            \"die\"\n        ]).gt(\"created_at\", roundStartTime).order(\"created_at\", {\n            ascending: false\n        }).limit(1);\n        if (error || !data || data.length === 0) {\n            return false; // 플레이어가 현재 라운드에서 액션을 취하지 않았음\n        }\n        playerLastActions.add(player.id);\n    }\n    // 모든 활성 플레이어가 액션을 취했는지 확인\n    return playerLastActions.size === activePlayers.length;\n}\n/**\n * 게임 종료 시 승자 판정 및 상태 업데이트\n */ async function finishGame(gameId) {\n    try {\n        // 게임 정보 조회\n        const { data: gameData, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"*, rooms(*)\").eq(\"id\", gameId).single();\n        if (gameError || !gameData) {\n            throw handleResourceNotFoundError(\"game\", gameId, gameError);\n        }\n        // 방 정보와 게임 모드 확인\n        const roomData = gameData.rooms;\n        const gameMode = roomData.mode;\n        // 생존한 플레이어 정보 조회\n        const { data: playersData, error: playersError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"game_id\", gameId).eq(\"is_die\", false);\n        if (playersError || !playersData || playersData.length === 0) {\n            throw handleDatabaseError(playersError, \"finishGame\");\n        }\n        // 생존한 플레이어가 한 명만 있다면 자동 승리\n        if (playersData.length === 1) {\n            await updateGameResult(gameId, playersData[0].id);\n            return;\n        }\n        // 게임 모드에 따라 승자 결정 로직이 달라짐\n        let playerResults = [];\n        if (gameMode === 2) {\n            // 2장 모드: 기본 승자 판정 로직 사용\n            playerResults = playersData.map((player)=>{\n                const evaluation = (0,_utils_gameLogic__WEBPACK_IMPORTED_MODULE_1__.evaluateCards)(player.cards);\n                return {\n                    playerId: player.id,\n                    score: evaluation.value,\n                    rank: evaluation.rank,\n                    cards: player.cards\n                };\n            });\n        } else if (gameMode === 3) {\n            // 3장 모드: 선택한 카드를 사용하거나, 선택하지 않았다면 최적의 조합 찾기\n            playerResults = playersData.map((player)=>{\n                let cardsToEvaluate;\n                if (player.selected_cards && player.selected_cards.length === 2) {\n                    // 플레이어가 직접 선택한 카드 사용\n                    cardsToEvaluate = player.selected_cards;\n                } else {\n                    // 선택하지 않았다면 최적의 조합을 자동으로 찾기\n                    cardsToEvaluate = (0,_utils_gameLogic__WEBPACK_IMPORTED_MODULE_1__.findBestCombination)(player.cards);\n                }\n                const evaluation = (0,_utils_gameLogic__WEBPACK_IMPORTED_MODULE_1__.evaluateCards)(cardsToEvaluate);\n                return {\n                    playerId: player.id,\n                    score: evaluation.value,\n                    rank: evaluation.rank,\n                    cards: cardsToEvaluate\n                };\n            });\n        }\n        // 점수순으로 정렬\n        playerResults.sort((a, b)=>b.score - a.score);\n        // 승자 확인 (동점이면 무승부 처리 필요)\n        const winner = playerResults[0];\n        const secondPlace = playerResults[1];\n        // 동점일 경우 당월로 처리\n        const isDraw = winner.score === secondPlace.score;\n        if (isDraw) {\n            // 당월시 배팅금액 되돌리고 재게임 준비\n            await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n                status: \"draw\",\n                winner: null\n            }).eq(\"id\", gameId);\n            // 게임 액션 기록\n            await recordGameAction(gameId, \"regame\", null);\n            console.log(`게임 ${gameId} 동점으로 당월`);\n        } else {\n            // 승자 업데이트\n            const totalPot = gameData.total_pot || 0;\n            // 승자 잔액 업데이트\n            const { data: winnerData, error: winnerQueryError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"balance\").eq(\"id\", winner.playerId).single();\n            if (winnerQueryError) {\n                console.error(\"승자 정보 조회 오류:\", winnerQueryError);\n                throw handleDatabaseError(winnerQueryError, \"finishGame\");\n            }\n            const { error: balanceError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n                balance: (winnerData.balance || 0) + totalPot\n            }).eq(\"id\", winner.playerId);\n            if (balanceError) {\n                console.error(\"승자 잔액 업데이트 오류:\", balanceError);\n                throw handleDatabaseError(balanceError, \"finishGame\");\n            }\n            // 게임 상태 업데이트\n            await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n                status: \"finished\",\n                winner: winner.playerId,\n                winning_cards: winner.cards,\n                winning_rank: winner.rank\n            }).eq(\"id\", gameId);\n            // 게임 액션 기록\n            await recordGameAction(gameId, \"show\", winner.playerId);\n            console.log(`게임 ${gameId} 승자: ${winner.playerId} (${winner.rank})`);\n        }\n    } catch (error) {\n        console.error(\"게임 종료 처리 중 오류 발생:\", error);\n        throw error;\n    }\n}\n/**\n * 게임 승자 업데이트\n */ async function updateGameResult(gameId, winnerId) {\n    try {\n        // 게임 정보 조회\n        const { data: gameData, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"*, rooms(*)\").eq(\"id\", gameId).single();\n        if (gameError || !gameData) {\n            throw handleResourceNotFoundError(\"game\", gameId, gameError);\n        }\n        // 승자 정보 조회\n        const { data: winnerData, error: winnerError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"id\", winnerId).single();\n        if (winnerError || !winnerData) {\n            throw handleResourceNotFoundError(\"player\", winnerId, winnerError);\n        }\n        // 승자 카드 평가\n        const cardsToEvaluate = gameData.rooms.mode === 3 && winnerData.selected_cards && winnerData.selected_cards.length === 2 ? winnerData.selected_cards : winnerData.cards;\n        const evaluation = (0,_utils_gameLogic__WEBPACK_IMPORTED_MODULE_1__.evaluateCards)(cardsToEvaluate);\n        // 총 상금\n        const totalPot = gameData.total_pot || 0;\n        // 승자 잔액 업데이트\n        const { data: winnerBalanceData, error: winnerBalanceError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"balance\").eq(\"id\", winnerId).single();\n        if (winnerBalanceError) {\n            console.error(\"승자 정보 조회 오류:\", winnerBalanceError);\n            throw handleDatabaseError(winnerBalanceError, \"updateGameResult\");\n        }\n        const { error: balanceError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n            balance: (winnerBalanceData.balance || 0) + totalPot\n        }).eq(\"id\", winnerId);\n        if (balanceError) {\n            console.error(\"승자 잔액 업데이트 오류:\", balanceError);\n            throw handleDatabaseError(balanceError, \"updateGameResult\");\n        }\n        // 게임 상태 업데이트\n        await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n            status: \"finished\",\n            winner: winnerId,\n            winning_cards: cardsToEvaluate,\n            winning_rank: evaluation.rank\n        }).eq(\"id\", gameId);\n        // 게임 액션 기록\n        await recordGameAction(gameId, \"show\", winnerId);\n        console.log(`게임 ${gameId} 승자: ${winnerId} (${evaluation.rank})`);\n    } catch (error) {\n        console.error(\"게임 결과 업데이트 중 오류 발생:\", error);\n        throw error;\n    }\n}\n// 재경기 처리 함수\nasync function handleRegame(gameId) {\n    const gameState = await getGameState(gameId);\n    // 플레이어들 카드 초기화 \n    for (const player of gameState.players){\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n            cards: null,\n            is_die: false\n        }).eq(\"id\", player.id);\n        if (error) {\n            console.error(\"플레이어 카드 초기화 오류:\", error);\n        }\n    }\n    // 게임 상태 업데이트 - 배팅값은 유지하며 재시작\n    const { error: gameUpdateError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n        status: \"regame\",\n        current_turn: null,\n        winner: null,\n        regame_start_time: new Date().toISOString(),\n        regame_wait_time: REGAME_WAIT_TIME_MS\n    }).eq(\"id\", gameId);\n    if (gameUpdateError) {\n        console.error(\"재경기 설정 오류:\", gameUpdateError);\n        throw handleDatabaseError(gameUpdateError, \"handleRegame\");\n    }\n    // 재경기 액션 기록\n    await recordGameAction(gameId, \"regame\", null);\n    // 1초마다 대기 시간 업데이트\n    let remainingTime = Math.floor(REGAME_WAIT_TIME_MS / 1000);\n    const intervalId = setInterval(async ()=>{\n        remainingTime--;\n        // 남은 시간 업데이트\n        await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n            regame_remaining_time: remainingTime\n        }).eq(\"id\", gameId);\n        if (remainingTime <= 0) {\n            clearInterval(intervalId);\n        }\n    }, 1000);\n    // 잠시 후 게임 재시작\n    setTimeout(async ()=>{\n        try {\n            clearInterval(intervalId); // 혹시 남아있는 인터벌 정리\n            await startGame(gameId);\n        } catch (err) {\n            console.error(\"재경기 시작 오류:\", err);\n        }\n    }, REGAME_WAIT_TIME_MS);\n}\n// 플레이어 좌석 업데이트\nasync function updateSeat(gameId, playerId, seatIndex) {\n    try {\n        // 해당 좌석이 이미 사용 중인지 확인\n        const { data: existingPlayer, error: checkError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"id\").eq(\"game_id\", gameId).eq(\"seat_index\", seatIndex);\n        if (checkError) {\n            console.error(\"좌석 확인 오류:\", checkError);\n            throw handleDatabaseError(checkError, \"updateSeat\");\n        }\n        // 이미 다른 플레이어가 해당 좌석에 앉아있으면 오류\n        if (existingPlayer && existingPlayer.length > 0 && existingPlayer[0].id !== playerId) {\n            throw handleGameError(null, ErrorType.INVALID_STATE, \"updateSeat\");\n        }\n        // 플레이어 좌석 업데이트\n        const { error: updateError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n            seat_index: seatIndex\n        }).eq(\"game_id\", gameId).eq(\"id\", playerId);\n        if (updateError) {\n            console.error(\"좌석 업데이트 오류:\", updateError);\n            throw handleDatabaseError(updateError, \"updateSeat\");\n        }\n    } catch (err) {\n        console.error(\"좌석 업데이트 중 예외 발생:\", err);\n        throw err;\n    }\n}\n/**\n * 베팅 라운드 종료 및 시작\n */ async function finishBettingRound(gameId) {\n    try {\n        console.log(`게임 ${gameId}: 베팅 라운드 종료`);\n        // 게임 정보 조회\n        const { data: gameData, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"*, rooms(*), players(*)\").eq(\"id\", gameId).single();\n        if (gameError || !gameData) {\n            console.error(\"게임 정보 조회 오류:\", gameError);\n            throw handleResourceNotFoundError(\"game\", gameId, gameError);\n        }\n        // 생존한 플레이어만 필터링\n        const activePlayers = gameData.players.filter((p)=>!p.is_die);\n        // 생존 플레이어가 1명 이하면 게임 종료\n        if (activePlayers.length <= 1) {\n            await finishGame(gameId);\n            return;\n        }\n        // 게임 모드 확인 (2장 또는 3장)\n        const gameMode = gameData.rooms?.mode || 2;\n        // 현재 베팅 라운드 확인\n        const currentBettingRound = gameData.betting_round || 1;\n        // 모드에 따른 처리\n        if (gameMode === 2) {\n            // 2장 모드에서는 베팅 라운드가 끝나면 게임 종료\n            await finishGame(gameId);\n            return;\n        } else if (gameMode === 3) {\n            // 3장 모드 처리\n            if (currentBettingRound === 1) {\n                // 첫 번째 베팅 라운드가 끝나면 3번째 카드 배분 및 공개 카드 설정\n                // 덱에서 추가 카드 가져오기\n                const deck = createShuffledDeck();\n                // 공개 카드 배분 및 데이터베이스 업데이트\n                for (const player of activePlayers){\n                    if (!player.cards || player.cards.length < 2) {\n                        console.error(`플레이어 ${player.id}의 카드가 없습니다.`);\n                        continue;\n                    }\n                    const thirdCard = deck.pop();\n                    if (!thirdCard) {\n                        console.error(\"덱에 카드가 부족합니다.\");\n                        break;\n                    }\n                    // 기존 카드에 새 카드 추가\n                    const updatedCards = [\n                        ...player.cards,\n                        thirdCard\n                    ];\n                    // 플레이어 카드 업데이트\n                    await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n                        cards: updatedCards,\n                        open_card: thirdCard // 세 번째 카드는 공개\n                    }).eq(\"id\", player.id);\n                    // 게임 액션 기록\n                    await recordGameAction(gameId, \"draw_card\", player.id);\n                }\n                // 게임 상태 업데이트\n                await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n                    betting_round: 2,\n                    current_turn: activePlayers[0].id,\n                    betting_value: 0,\n                    betting_end_time: new Date(Date.now() + BETTING_TIME_LIMIT_MS).toISOString() // 베팅 시간 제한 초기화\n                }).eq(\"id\", gameId);\n                console.log(`게임 ${gameId}: 두 번째 베팅 라운드 시작, 공개 카드 배분`);\n                // 다음 플레이어 베팅 시간 타이머 설정\n                setTimeout(async ()=>{\n                    try {\n                        // 게임 상태 다시 확인 (중간에 베팅이 완료되었을 수 있음)\n                        const { data: currentGame, error: currentGameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"status, current_turn, betting_end_time, betting_round\").eq(\"id\", gameId).single();\n                        if (currentGameError) {\n                            console.error(\"게임 상태 확인 중 오류:\", currentGameError);\n                            return;\n                        }\n                        // 게임이 진행 중이고 베팅 라운드가 2이며 베팅 시간이 만료된 경우\n                        if (currentGame && currentGame.status === \"playing\" && currentGame.betting_round === 2 && currentGame.current_turn === activePlayers[0].id && new Date(currentGame.betting_end_time) <= new Date()) {\n                            console.log(`게임 ${gameId}: 베팅 타임아웃, 자동 폴드 처리`);\n                            await handleBettingTimeout(gameId);\n                        }\n                    } catch (err) {\n                        console.error(\"베팅 타이머 처리 중 오류:\", err);\n                    }\n                }, BETTING_TIME_LIMIT_MS);\n            } else if (currentBettingRound === 2) {\n                // 두 번째 베팅 라운드가 끝나면 최종 카드 선택 단계로 전환\n                await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n                    betting_round: 3,\n                    card_selection_end_time: new Date(Date.now() + CARD_SELECTION_TIME_LIMIT_MS).toISOString() // 카드 선택 시간 설정\n                }).eq(\"id\", gameId);\n                console.log(`게임 ${gameId}: 카드 선택 단계 시작`);\n                // 카드 선택 시간 타이머 설정\n                setTimeout(async ()=>{\n                    try {\n                        // 게임 상태 확인\n                        const { data: currentGame, error: currentGameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"status, betting_round, card_selection_end_time\").eq(\"id\", gameId).single();\n                        if (currentGameError) {\n                            console.error(\"게임 상태 확인 중 오류:\", currentGameError);\n                            return;\n                        }\n                        // 게임이 아직 진행 중이고 카드 선택 단계인 경우에만 처리\n                        if (currentGame && currentGame.status === \"playing\" && currentGame.betting_round === 3 && new Date(currentGame.card_selection_end_time) <= new Date()) {\n                            console.log(`게임 ${gameId}: 카드 선택 시간 종료, 자동 선택 실행`);\n                            await autoSelectFinalCards(gameId);\n                        }\n                    } catch (err) {\n                        console.error(\"카드 선택 타이머 처리 중 오류:\", err);\n                    }\n                }, CARD_SELECTION_TIME_LIMIT_MS);\n            } else if (currentBettingRound === 3) {\n                // 카드 선택 단계가 끝나면 게임 종료\n                await finishGame(gameId);\n            }\n        }\n    } catch (error) {\n        console.error(\"베팅 라운드 종료 중 오류:\", error);\n        throw error;\n    }\n}\n/**\n * 3장 모드에서 최종 카드 선택\n */ async function selectFinalCards(gameId, playerId, selectedCards) {\n    try {\n        // 선택한 카드 유효성 확인\n        if (!selectedCards || selectedCards.length !== 2) {\n            throw handleGameError(null, ErrorType.INVALID_ACTION, \"selectFinalCards\");\n        }\n        // 플레이어 정보 조회\n        const { data: playerData, error: playerError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"id\", playerId).eq(\"game_id\", gameId).single();\n        if (playerError || !playerData) {\n            throw handleResourceNotFoundError(\"player\", playerId, playerError);\n        }\n        // 선택한 카드가 플레이어의 카드인지 확인\n        const isValidSelection = selectedCards.every((card)=>playerData.cards.includes(card));\n        if (!isValidSelection) {\n            throw handleGameError(null, ErrorType.INVALID_ACTION, \"selectFinalCards\");\n        }\n        // 선택한 카드 저장\n        await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n            selected_cards: selectedCards\n        }).eq(\"id\", playerId);\n        console.log(`플레이어 ${playerId}의 카드가 선택됨: ${selectedCards.join(\", \")}`);\n        // 게임 액션 기록\n        await recordGameAction(gameId, \"show\", playerId);\n        // 모든 플레이어가 카드를 선택했는지 확인\n        const { data: allPlayers, error: allPlayersError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"game_id\", gameId).eq(\"is_die\", false);\n        if (allPlayersError || !allPlayers) {\n            throw handleDatabaseError(allPlayersError, \"selectFinalCards\");\n        }\n        const allSelected = allPlayers.every((p)=>p.id === playerId || p.selected_cards && p.selected_cards.length === 2);\n        // 모든 플레이어가 카드를 선택했으면 게임 종료\n        if (allSelected) {\n            await finishGame(gameId);\n        }\n    } catch (error) {\n        console.error(\"카드 선택 중 오류:\", error);\n        throw error;\n    }\n}\n/**\n * 카드 선택 시간이 종료되면 자동으로 최적 카드 선택\n */ async function autoSelectFinalCards(gameId) {\n    try {\n        // 게임 정보 조회\n        const { data: gameData, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"*\").eq(\"id\", gameId).single();\n        if (gameError || !gameData) {\n            throw handleResourceNotFoundError(\"game\", gameId, gameError);\n        }\n        // 아직 카드를 선택하지 않은 활성 플레이어들 조회\n        const { data: pendingPlayers, error: pendingError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"game_id\", gameId).eq(\"is_die\", false).is(\"selected_cards\", null);\n        if (pendingError) {\n            throw handleDatabaseError(pendingError, \"autoSelectFinalCards\");\n        }\n        // 각 플레이어에 대해 최적의 카드 조합 선택\n        for (const player of pendingPlayers || []){\n            if (player.cards && player.cards.length === 3) {\n                const bestCards = (0,_utils_gameLogic__WEBPACK_IMPORTED_MODULE_1__.findBestCombination)(player.cards);\n                await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n                    selected_cards: bestCards\n                }).eq(\"id\", player.id);\n                console.log(`플레이어 ${player.id}의 카드가 자동 선택됨: ${bestCards.join(\", \")}`);\n            }\n        }\n        // 모든 카드 선택이 완료되었으므로 게임 종료 처리\n        await finishGame(gameId);\n    } catch (error) {\n        console.error(\"자동 카드 선택 중 오류:\", error);\n        throw error;\n    }\n}\n/**\n * 베팅 타임아웃 처리\n * 지정된 시간내에 플레이어가 베팅을 하지 않으면 자동으로 폴드 처리\n */ async function handleBettingTimeout(gameId) {\n    try {\n        // 게임 상태 확인\n        const { data: game, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"status, current_turn, betting_end_time, betting_round\").eq(\"id\", gameId).single();\n        if (gameError) {\n            throw handleDatabaseError(gameError, \"handleBettingTimeout\");\n        }\n        // 게임이 플레이 중이 아니거나, 현재 턴 플레이어가 없으면 처리 중단\n        if (game.status !== \"playing\" || !game.current_turn) {\n            return;\n        }\n        // 베팅 타임아웃 시간이 지났는지 확인\n        const currentTime = new Date().getTime();\n        const bettingEndTime = new Date(game.betting_end_time).getTime();\n        if (currentTime < bettingEndTime) {\n            return; // 아직 타임아웃되지 않음\n        }\n        // 현재 턴 플레이어 정보 조회\n        const { data: currentPlayer, error: playerError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"id\", game.current_turn).eq(\"game_id\", gameId).single();\n        if (playerError) {\n            throw handleDatabaseError(playerError, \"handleBettingTimeout - 현재 플레이어 조회\");\n        }\n        // 타임아웃된 플레이어 자동 폴드 처리\n        console.log(`${currentPlayer.username}의 베팅 시간 초과, 자동 폴드 처리`);\n        // 타임아웃 로그 기록\n        await (0,_logService__WEBPACK_IMPORTED_MODULE_2__.logTimeout)(gameId, currentPlayer.id, \"베팅\");\n        // 액션 기록\n        await recordGameAction(gameId, \"die\", currentPlayer.id, 0, game.betting_round);\n        // 플레이어 상태 업데이트 (폴드)\n        await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n            is_die: true\n        }).eq(\"id\", currentPlayer.id).eq(\"game_id\", gameId);\n        // 다음 플레이어 구하기\n        const { data: players, error: playersError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"game_id\", gameId).order(\"seat_index\", {\n            ascending: true\n        });\n        if (playersError) {\n            throw handleDatabaseError(playersError, \"handleBettingTimeout - 전체 플레이어 조회\");\n        }\n        // 폴드하지 않은 플레이어만 필터링\n        const activePlayers = players.filter((p)=>!p.is_die);\n        // 활성 플레이어가 1명 이하면 게임 종료\n        if (activePlayers.length <= 1) {\n            await finishGame(gameId);\n            return;\n        }\n        // 다음 턴 플레이어 설정\n        const nextPlayerId = getNextPlayerTurn(activePlayers, currentPlayer.id);\n        // 새로운 베팅 종료 시간 설정\n        const newBettingEndTime = new Date(currentTime + BETTING_TIME_LIMIT_MS);\n        // 게임 상태 업데이트\n        await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n            current_turn: nextPlayerId,\n            betting_end_time: newBettingEndTime.toISOString()\n        }).eq(\"id\", gameId);\n    } catch (error) {\n        console.error(\"베팅 타임아웃 처리 중 오류:\", error);\n        await (0,_logService__WEBPACK_IMPORTED_MODULE_2__.logSystemError)(gameId, \"handleBettingTimeout\", error);\n    }\n}\n/**\n * 베팅 액션 수행 (베팅, 콜, 레이즈, 폴드)\n */ async function betAction(gameId, playerId, action, amount) {\n    try {\n        // 게임 정보 조회\n        const { data: gameData, error: gameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"*, players(*)\").eq(\"id\", gameId).single();\n        if (gameError || !gameData) {\n            throw handleResourceNotFoundError(\"game\", gameId, gameError);\n        }\n        // 게임이 진행 중인지 확인\n        if (gameData.status !== \"playing\") {\n            throw handleGameError(null, ErrorType.INVALID_STATE, \"betAction\");\n        }\n        // 현재 차례인지 확인\n        if (gameData.current_turn !== playerId) {\n            throw handleGameError(null, ErrorType.INVALID_TURN, \"betAction\");\n        }\n        // 플레이어 정보 찾기\n        const player = gameData.players.find((p)=>p.id === playerId);\n        if (!player) {\n            throw handleResourceNotFoundError(\"player\", playerId);\n        }\n        // 생존한 플레이어들 찾기\n        const activePlayers = gameData.players.filter((p)=>!p.is_die);\n        if (activePlayers.length <= 1) {\n            // 한 명만 남았으면 게임 종료\n            await finishGame(gameId);\n            return;\n        }\n        // 액션에 따른 처리\n        const currentBettingValue = gameData.betting_value || 0;\n        const totalPot = gameData.total_pot || 0;\n        let newBettingValue = currentBettingValue;\n        let playerBet = 0;\n        let isPlayerDie = false;\n        switch(action){\n            case \"bet\":\n                // 첫 베팅\n                if (currentBettingValue > 0) {\n                    throw handleGameError(null, ErrorType.INVALID_ACTION, \"betAction\");\n                }\n                if (amount <= 0) {\n                    throw handleGameError(null, ErrorType.INVALID_ACTION, \"betAction\");\n                }\n                playerBet = amount;\n                newBettingValue = amount;\n                break;\n            case \"call\":\n                // 콜: 현재 베팅 금액에 맞추기\n                if (currentBettingValue <= 0) {\n                    throw handleGameError(null, ErrorType.INVALID_ACTION, \"betAction\");\n                }\n                playerBet = currentBettingValue;\n                break;\n            case \"raise\":\n                // 레이즈: 현재 베팅 금액보다 더 큰 금액으로 베팅\n                if (currentBettingValue <= 0) {\n                    throw handleGameError(null, ErrorType.INVALID_ACTION, \"betAction\");\n                }\n                if (amount <= currentBettingValue) {\n                    throw handleGameError(null, ErrorType.INVALID_ACTION, \"betAction\");\n                }\n                playerBet = amount;\n                newBettingValue = amount;\n                break;\n            case \"die\":\n                // 폴드: 게임에서 포기\n                isPlayerDie = true;\n                break;\n            case \"check\":\n                // 체크: 현재 베팅액에 동의\n                if (currentBettingValue > 0) {\n                    throw handleGameError(null, ErrorType.INVALID_ACTION, \"betAction\");\n                }\n                playerBet = 0;\n                break;\n            case \"half\":\n                // 하프: 현재 총액의 절반 베팅\n                playerBet = Math.floor(totalPot / 2);\n                if (playerBet <= 0) playerBet = 1; // 최소 1\n                newBettingValue = playerBet;\n                break;\n            case \"quarter\":\n                // 쿼터: 현재 총액의 4분의 1 베팅\n                playerBet = Math.floor(totalPot / 4);\n                if (playerBet <= 0) playerBet = 1; // 최소 1\n                newBettingValue = playerBet;\n                break;\n            default:\n                throw handleGameError(null, ErrorType.INVALID_ACTION, \"betAction\");\n        }\n        // 플레이어 베팅액 및 상태 업데이트\n        if (isPlayerDie) {\n            // 폴드한 경우\n            await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n                is_die: true\n            }).eq(\"id\", playerId);\n        } else {\n            // 베팅한 경우 플레이어의 베팅액 차감 및 팟에 추가\n            if (playerBet > 0) {\n                const newBalance = (player.balance || 0) - playerBet;\n                if (newBalance < 0) {\n                    throw handleGameError(null, ErrorType.INVALID_ACTION, \"betAction\");\n                }\n                await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").update({\n                    balance: newBalance\n                }).eq(\"id\", playerId);\n            }\n        }\n        // 게임 액션 기록\n        await recordGameAction(gameId, action, playerId, playerBet);\n        // 다음 플레이어 찾기\n        let nextPlayer = null;\n        const playerIndex = activePlayers.findIndex((p)=>p.id === playerId);\n        // 다음 생존 플레이어 찾기 (현재 폴드한 플레이어 제외)\n        const remainingPlayers = activePlayers.filter((p)=>p.id !== playerId || !isPlayerDie);\n        if (remainingPlayers.length <= 1) {\n            // 한 명만 남았으면 게임 종료\n            await finishGame(gameId);\n            return;\n        }\n        if (playerIndex >= 0 && playerIndex < activePlayers.length - 1) {\n            // 다음 플레이어\n            nextPlayer = activePlayers[playerIndex + 1];\n        } else {\n            // 마지막 플레이어였다면 처음으로 돌아감\n            nextPlayer = activePlayers[0];\n        }\n        // 모든 플레이어가 베팅을 맞췄는지 확인\n        const allPlayersMatched = activePlayers.every((p)=>p.id === playerId || p.bet === newBettingValue || p.is_die);\n        if (allPlayersMatched) {\n            // 베팅 라운드 종료\n            await finishBettingRound(gameId);\n        } else {\n            // 다음 플레이어로 차례 넘김\n            await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").update({\n                current_turn: nextPlayer.id,\n                betting_value: newBettingValue,\n                total_pot: totalPot + playerBet,\n                betting_end_time: new Date(Date.now() + BETTING_TIME_LIMIT_MS).toISOString() // 새로운 타임아웃 설정\n            }).eq(\"id\", gameId);\n            // 다음 플레이어 베팅 시간 타이머 설정\n            setTimeout(async ()=>{\n                try {\n                    // 게임 상태 다시 확인 (중간에 베팅이 완료되었을 수 있음)\n                    const { data: currentGame, error: currentGameError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"games\").select(\"status, current_turn, betting_end_time, betting_round\").eq(\"id\", gameId).single();\n                    if (currentGameError) {\n                        console.error(\"게임 상태 확인 중 오류:\", currentGameError);\n                        return;\n                    }\n                    // 게임이 진행 중이고 다음 플레이어의 차례이며 베팅 시간이 만료된 경우\n                    if (currentGame && currentGame.status === \"playing\" && currentGame.current_turn === nextPlayer.id && new Date(currentGame.betting_end_time) <= new Date()) {\n                        console.log(`게임 ${gameId}: 플레이어 ${nextPlayer.id} 베팅 타임아웃, 자동 폴드 처리`);\n                        await handleBettingTimeout(gameId);\n                    }\n                } catch (err) {\n                    console.error(\"베팅 타이머 처리 중 오류:\", err);\n                }\n            }, BETTING_TIME_LIMIT_MS);\n        }\n    } catch (error) {\n        console.error(\"베팅 액션 처리 중 오류:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/gameApi.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/logService.ts":
/*!*******************************!*\
  !*** ./src/lib/logService.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGameLog: () => (/* binding */ createGameLog),\n/* harmony export */   getGameLogs: () => (/* binding */ getGameLogs),\n/* harmony export */   logBettingAction: () => (/* binding */ logBettingAction),\n/* harmony export */   logCardAction: () => (/* binding */ logCardAction),\n/* harmony export */   logDebug: () => (/* binding */ logDebug),\n/* harmony export */   logError: () => (/* binding */ logError),\n/* harmony export */   logGameEnd: () => (/* binding */ logGameEnd),\n/* harmony export */   logGameStart: () => (/* binding */ logGameStart),\n/* harmony export */   logInfo: () => (/* binding */ logInfo),\n/* harmony export */   logSystemError: () => (/* binding */ logSystemError),\n/* harmony export */   logTimeout: () => (/* binding */ logTimeout),\n/* harmony export */   logWarning: () => (/* binding */ logWarning)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(ssr)/./src/lib/supabase.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm/v4.js\");\n\n\n/**\n * 로그 서비스\n * 게임 이벤트와 오류를 기록하고 조회하는 기능 제공\n */ /**\n * 게임 로그 생성\n */ async function createGameLog(gameId, level, category, message, playerId, metadata) {\n    try {\n        const logId = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        const timestamp = new Date().toISOString();\n        const logEntry = {\n            id: logId,\n            game_id: gameId,\n            timestamp,\n            level,\n            category,\n            message,\n            player_id: playerId,\n            metadata\n        };\n        // 콘솔 출력 (개발 디버깅용)\n        const consoleMessage = `[${level.toUpperCase()}] [${category}] ${message}`;\n        switch(level){\n            case \"error\":\n                console.error(consoleMessage, metadata);\n                break;\n            case \"warning\":\n                console.warn(consoleMessage, metadata);\n                break;\n            case \"info\":\n                console.info(consoleMessage, metadata);\n                break;\n            default:\n                console.log(consoleMessage, metadata);\n        }\n        // 데이터베이스에 저장\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"game_logs\").insert(logEntry);\n        if (error) {\n            console.error(\"로그 저장 오류:\", error);\n            return logId; // 로그 저장 실패해도 ID는 반환\n        }\n        return logId;\n    } catch (err) {\n        console.error(\"로그 생성 중 예외 발생:\", err);\n        return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(); // 오류 발생 시 임의 ID 반환\n    }\n}\n/**\n * 게임의 모든 로그 조회\n */ async function getGameLogs(gameId, options) {\n    try {\n        let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"game_logs\").select(\"*\").eq(\"game_id\", gameId).order(\"timestamp\", {\n            ascending: false\n        });\n        // 필터 적용\n        if (options?.level) {\n            query = query.eq(\"level\", options.level);\n        }\n        if (options?.category) {\n            query = query.eq(\"category\", options.category);\n        }\n        if (options?.playerId) {\n            query = query.eq(\"player_id\", options.playerId);\n        }\n        // 페이징 처리\n        if (options?.limit) {\n            query = query.limit(options.limit);\n        }\n        if (options?.offset) {\n            query = query.range(options.offset, options.offset + (options.limit || 50) - 1);\n        }\n        const { data, error } = await query;\n        if (error) {\n            console.error(\"로그 조회 오류:\", error);\n            return [];\n        }\n        return data || [];\n    } catch (err) {\n        console.error(\"로그 조회 중 예외 발생:\", err);\n        return [];\n    }\n}\n/**\n * 편의 함수: 디버그 로그\n */ function logDebug(gameId, category, message, playerId, metadata) {\n    return createGameLog(gameId, \"debug\", category, message, playerId, metadata);\n}\n/**\n * 편의 함수: 정보 로그\n */ function logInfo(gameId, category, message, playerId, metadata) {\n    return createGameLog(gameId, \"info\", category, message, playerId, metadata);\n}\n/**\n * 편의 함수: 경고 로그\n */ function logWarning(gameId, category, message, playerId, metadata) {\n    return createGameLog(gameId, \"warning\", category, message, playerId, metadata);\n}\n/**\n * 편의 함수: 오류 로그\n */ function logError(gameId, category, message, playerId, metadata) {\n    return createGameLog(gameId, \"error\", category, message, playerId, metadata);\n}\n/**\n * 게임 시작 로그\n */ function logGameStart(gameId, playerCount, gameMode) {\n    return logInfo(gameId, \"game\", `게임 시작: ${playerCount}명 참가, ${gameMode}장 모드`, undefined, {\n        playerCount,\n        gameMode\n    });\n}\n/**\n * 게임 종료 로그\n */ function logGameEnd(gameId, winnerId, winningRank, totalPot) {\n    return logInfo(gameId, \"game\", `게임 종료: 승자 ${winnerId}, 족보 ${winningRank}, 총 상금 ${totalPot}`, winnerId, {\n        winningRank,\n        totalPot\n    });\n}\n/**\n * 베팅 액션 로그\n */ function logBettingAction(gameId, playerId, action, amount, currentPot) {\n    return logInfo(gameId, \"betting\", `베팅 액션: ${playerId}의 ${action} ${amount}원, 현재 총 ${currentPot}원`, playerId, {\n        action,\n        amount,\n        currentPot\n    });\n}\n/**\n * 카드 관련 액션 로그\n */ function logCardAction(gameId, playerId, action, cards) {\n    return logInfo(gameId, \"cards\", `카드 액션: ${playerId}의 ${action}`, playerId, {\n        action,\n        cards\n    });\n}\n/**\n * 타임아웃 로그\n */ function logTimeout(gameId, playerId, action) {\n    return logWarning(gameId, \"player\", `타임아웃: ${playerId}의 ${action} 시간 초과`, playerId, {\n        action\n    });\n}\n/**\n * 시스템 에러 로그\n */ function logSystemError(gameId, operation, error) {\n    return logError(gameId, \"system\", `시스템 오류: ${operation} 중 오류 발생`, undefined, {\n        error: error.message || String(error),\n        stack: error.stack\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/logService.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(ssr)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://ftzxcbarjntphlwmincc.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0enhjYmFyam50cGhsd21pbmNjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzNzk5OTAsImV4cCI6MjA1Nzk1NTk5MH0.h8y5X3kCGJgvVf-_EA4jOyjU-4Z5q24GHklQZgrocY4\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey, {\n    realtime: {\n        params: {\n            eventsPerSecond: 20\n        }\n    },\n    auth: {\n        persistSession: true,\n        autoRefreshToken: true,\n        detectSessionInUrl: false\n    },\n    global: {\n        fetch: fetch.bind(globalThis)\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBRXJELE1BQU1DLGNBQWNDLDBDQUFvQztBQUN4RCxNQUFNRyxrQkFBa0JILGtOQUF5QztBQUUxRCxNQUFNSyxXQUFXUCxtRUFBWUEsQ0FBQ0MsYUFBYUksaUJBQWlCO0lBQ2pFRyxVQUFVO1FBQ1JDLFFBQVE7WUFDTkMsaUJBQWlCO1FBQ25CO0lBQ0Y7SUFDQUMsTUFBTTtRQUNKQyxnQkFBZ0I7UUFDaEJDLGtCQUFrQjtRQUNsQkMsb0JBQW9CO0lBQ3RCO0lBQ0FDLFFBQVE7UUFDTkMsT0FBT0EsTUFBTUMsSUFBSSxDQUFDQztJQUNwQjtBQUNGLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXRkYS8uL3NyYy9saWIvc3VwYWJhc2UudHM/MDZlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xuXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCE7XG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSE7XG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5LCB7XG4gIHJlYWx0aW1lOiB7XG4gICAgcGFyYW1zOiB7XG4gICAgICBldmVudHNQZXJTZWNvbmQ6IDIwXG4gICAgfVxuICB9LFxuICBhdXRoOiB7XG4gICAgcGVyc2lzdFNlc3Npb246IHRydWUsXG4gICAgYXV0b1JlZnJlc2hUb2tlbjogdHJ1ZSxcbiAgICBkZXRlY3RTZXNzaW9uSW5Vcmw6IGZhbHNlXG4gIH0sXG4gIGdsb2JhbDoge1xuICAgIGZldGNoOiBmZXRjaC5iaW5kKGdsb2JhbFRoaXMpXG4gIH1cbn0pOyJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlIiwicmVhbHRpbWUiLCJwYXJhbXMiLCJldmVudHNQZXJTZWNvbmQiLCJhdXRoIiwicGVyc2lzdFNlc3Npb24iLCJhdXRvUmVmcmVzaFRva2VuIiwiZGV0ZWN0U2Vzc2lvbkluVXJsIiwiZ2xvYmFsIiwiZmV0Y2giLCJiaW5kIiwiZ2xvYmFsVGhpcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(ssr)/./src/utils/gameLogic.ts":
/*!********************************!*\
  !*** ./src/utils/gameLogic.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareCards: () => (/* binding */ compareCards),\n/* harmony export */   determineWinner: () => (/* binding */ determineWinner),\n/* harmony export */   evaluateCards: () => (/* binding */ evaluateCards),\n/* harmony export */   findBestCombination: () => (/* binding */ findBestCombination),\n/* harmony export */   getCardMonth: () => (/* binding */ getCardMonth),\n/* harmony export */   isKwang: () => (/* binding */ isKwang),\n/* harmony export */   isYeol: () => (/* binding */ isYeol),\n/* harmony export */   nextTurn: () => (/* binding */ nextTurn)\n/* harmony export */ });\n// 카드 값 매핑: [1월~10월] * 2 = 20장의 카드\n// 1: 1월 1광, 2: 1월 일반, 3: 2월 광, 4: 2월 일반, 5: 3월 광, ..., 20: 10월 일반\nconst CARD_VALUES = [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20\n];\n// 카드 조합 평가 결과 캐싱을 위한 맵\nconst evaluationCache = new Map();\n/**\n * 카드가 속한 월을 반환 (1~10월)\n */ function getCardMonth(cardNumber) {\n    // 카드 번호를 통해 월 계산 (1~20 카드번호 -> 1~10월)\n    return Math.ceil(cardNumber / 2);\n}\n/**\n * 카드가 광인지 확인\n */ function isKwang(cardNumber) {\n    return cardNumber % 2 === 1 && cardNumber <= 5; // 1, 3, 5번 카드는 광\n}\n/**\n * 카드가 열끗인지 확인 (장, 10월 패)\n */ function isYeol(cardNumber) {\n    return cardNumber % 2 === 0; // 짝수 카드는 모두 열끗(일반)\n}\n/**\n * 캐시키 생성\n */ function getCacheKey(cards) {\n    return cards.sort((a, b)=>a - b).join(\"-\");\n}\n/**\n * 카드 조합의 등급과 값을 계산\n */ function evaluateCards(cards) {\n    // 입력 검증\n    if (!cards || cards.length !== 2) {\n        console.error(\"유효하지 않은 카드 조합:\", cards);\n        return {\n            cards: cards || [],\n            rank: \"망통\",\n            value: 0\n        };\n    }\n    // 캐시 확인\n    const cacheKey = getCacheKey(cards);\n    const cachedResult = evaluationCache.get(cacheKey);\n    if (cachedResult) {\n        return cachedResult;\n    }\n    try {\n        const [card1, card2] = [\n            ...cards\n        ].sort((a, b)=>a - b); // 오름차순 정렬, 원본 배열 변경 방지\n        const month1 = getCardMonth(card1);\n        const month2 = getCardMonth(card2);\n        // 카드 종류 확인\n        const isCard1Kwang = isKwang(card1);\n        const isCard2Kwang = isKwang(card2);\n        const isCard1Yeol = isYeol(card1);\n        const isCard2Yeol = isYeol(card2);\n        // 38광땡 (3월 광 + 8월 광)\n        if (month1 === 3 && month2 === 8 && isCard1Kwang && isCard2Kwang) {\n            const result = {\n                cards,\n                rank: \"38광땡\",\n                value: 2000\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 13광땡 (1월 광 + 3월 광)\n        if (month1 === 1 && month2 === 3 && isCard1Kwang && isCard2Kwang) {\n            const result = {\n                cards,\n                rank: \"13광땡\",\n                value: 1900\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 18광땡 (1월 광 + 8월 광)\n        if (month1 === 1 && month2 === 8 && isCard1Kwang && isCard2Kwang) {\n            const result = {\n                cards,\n                rank: \"18광땡\",\n                value: 1800\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 암행어사 (4월 열끗 + 7월 열끗)\n        if (month1 === 4 && month2 === 7 && isCard1Yeol && isCard2Yeol) {\n            const result = {\n                cards,\n                rank: \"암행어사\",\n                value: 1700\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 땡잡이 (3월 열끗 + 7월 열끗)\n        if (month1 === 3 && month2 === 7 && isCard1Yeol && isCard2Yeol) {\n            const result = {\n                cards,\n                rank: \"땡잡이\",\n                value: 1600\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 멍텅구리 구사 (4월 열끗 + 9월 열끗)\n        if (month1 === 4 && month2 === 9 && isCard1Yeol && isCard2Yeol) {\n            console.log(\"멍텅구리구사 발생: 4월 열끗 + 9월 열끗\");\n            const result = {\n                cards,\n                rank: \"멍텅구리구사\",\n                value: -100\n            }; // 특별 처리 위해 음수값\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 구사 (4월 + 9월 조합, 둘 다 열끗이 아닌 경우)\n        if (month1 === 4 && month2 === 9 || month1 === 9 && month2 === 4) {\n            // 둘 다 열끗인 경우는 제외 (이미 멍텅구리구사로 처리됨)\n            if (!(month1 === 4 && month2 === 9 && isCard1Yeol && isCard2Yeol)) {\n                console.log(\"구사 발생: 4월 + 9월 (열끗 아닌 조합)\");\n                const result = {\n                    cards,\n                    rank: \"구사\",\n                    value: -200\n                }; // 특별 처리 위해 음수값\n                evaluationCache.set(cacheKey, result);\n                return result;\n            }\n        }\n        // 땡 (같은 월)\n        if (month1 === month2) {\n            // 장땡 (10땡)\n            if (month1 === 10) {\n                const result = {\n                    cards,\n                    rank: \"10땡\",\n                    value: 1500\n                };\n                evaluationCache.set(cacheKey, result);\n                return result;\n            }\n            // 나머지 땡들 (9땡 ~ 1땡)\n            const result = {\n                cards,\n                rank: `${month1}땡`,\n                value: 1400 + month1 * 10\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 알리 (1월, 2월)\n        if (month1 === 1 && month2 === 2 || month1 === 2 && month2 === 1) {\n            const result = {\n                cards,\n                rank: \"알리\",\n                value: 800\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 독사 (1월, 4월)\n        if (month1 === 1 && month2 === 4 || month1 === 4 && month2 === 1) {\n            const result = {\n                cards,\n                rank: \"독사\",\n                value: 700\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 구삥 (1월, 9월)\n        if (month1 === 1 && month2 === 9 || month1 === 9 && month2 === 1) {\n            const result = {\n                cards,\n                rank: \"구삥\",\n                value: 600\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 장삥 (1월, 10월)\n        if (month1 === 1 && month2 === 10 || month1 === 10 && month2 === 1) {\n            const result = {\n                cards,\n                rank: \"장삥\",\n                value: 500\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 장사 (4월, 10월)\n        if (month1 === 4 && month2 === 10 || month1 === 10 && month2 === 4) {\n            const result = {\n                cards,\n                rank: \"장사\",\n                value: 400\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 세륙 (4월, 6월)\n        if (month1 === 4 && month2 === 6 || month1 === 6 && month2 === 4) {\n            const result = {\n                cards,\n                rank: \"세륙\",\n                value: 300\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 끗 계산 (1~9끗)\n        const kkeut = (month1 + month2) % 10;\n        // 갑오 (9끗)\n        if (kkeut === 9) {\n            const result = {\n                cards,\n                rank: \"갑오\",\n                value: 250\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 나머지 끗\n        if (kkeut > 0) {\n            const result = {\n                cards,\n                rank: `${kkeut}끗`,\n                value: 100 + kkeut * 10\n            };\n            evaluationCache.set(cacheKey, result);\n            return result;\n        }\n        // 망통 (0끗)\n        const result = {\n            cards,\n            rank: \"망통\",\n            value: 50\n        };\n        evaluationCache.set(cacheKey, result);\n        return result;\n    } catch (error) {\n        console.error(\"카드 평가 중 오류 발생:\", error, cards);\n        return {\n            cards,\n            rank: \"망통\",\n            value: 0\n        };\n    }\n}\n// 카드 비교 함수: 누가 이겼는지 계산 (1: 첫 번째 플레이어, 2: 두 번째 플레이어, 0: 무승부)\nfunction compareCards(player1Cards, player2Cards) {\n    const p1Eval = evaluateCards(player1Cards);\n    const p2Eval = evaluateCards(player2Cards);\n    console.log(\"패 비교:\", p1Eval.rank, \"(값:\", p1Eval.value, \") vs\", p2Eval.rank, \"(값:\", p2Eval.value, \")\");\n    // 구사류 특수 처리\n    if (p1Eval.rank === \"구사\" || p1Eval.rank === \"멍텅구리구사\" || p2Eval.rank === \"구사\" || p2Eval.rank === \"멍텅구리구사\") {\n        return 0; // 구사 발생은 일단 무승부 처리 (나중에 finishGame에서 재경기 로직 실행)\n    }\n    // 암행어사는 광땡(13, 18)에 승리\n    if (p1Eval.rank === \"암행어사\" && (p2Eval.rank === \"13광땡\" || p2Eval.rank === \"18광땡\")) {\n        console.log(\"암행어사가 광땡을 이김\");\n        return 1;\n    }\n    if (p2Eval.rank === \"암행어사\" && (p1Eval.rank === \"13광땡\" || p1Eval.rank === \"18광땡\")) {\n        console.log(\"암행어사가 광땡을 이김\");\n        return 2;\n    }\n    // 땡잡이는 1땡~9땡을 이김 (장땡 및 광땡 제외)\n    if (p1Eval.rank === \"땡잡이\" && p2Eval.rank.includes(\"땡\") && p2Eval.rank !== \"10땡\" && !p2Eval.rank.includes(\"광땡\")) {\n        console.log(\"땡잡이가 일반 땡을 이김\");\n        return 1;\n    }\n    if (p2Eval.rank === \"땡잡이\" && p1Eval.rank.includes(\"땡\") && p1Eval.rank !== \"10땡\" && !p1Eval.rank.includes(\"광땡\")) {\n        console.log(\"땡잡이가 일반 땡을 이김\");\n        return 2;\n    }\n    // 일반 족보 비교\n    if (p1Eval.value > p2Eval.value) {\n        return 1;\n    } else if (p1Eval.value < p2Eval.value) {\n        return 2;\n    } else {\n        return 0; // 무승부\n    }\n}\n// 다음 차례 계산\nfunction nextTurn(currentPlayerId, players) {\n    const activePlayers = players.filter((p)=>!p.isDie);\n    if (activePlayers.length <= 1) {\n        return activePlayers[0]?.id || currentPlayerId;\n    }\n    const currentIndex = activePlayers.findIndex((p)=>p.id === currentPlayerId);\n    const nextIndex = (currentIndex + 1) % activePlayers.length;\n    return activePlayers[nextIndex].id;\n}\n// 승자 결정 함수 개선\nfunction determineWinner(players) {\n    const activePlayers = players.filter((p)=>!p.isDie);\n    if (activePlayers.length === 0) {\n        return {\n            winnerId: null,\n            isRegame: false\n        };\n    }\n    if (activePlayers.length === 1) {\n        return {\n            winnerId: activePlayers[0].id,\n            isRegame: false\n        };\n    }\n    // 구사패 체크\n    const playersWithGusa = activePlayers.filter((p)=>{\n        const evaluation = evaluateCards(p.cards);\n        return evaluation.rank === \"구사\";\n    });\n    // 멍텅구리 구사 체크\n    const playersWithMengGusa = activePlayers.filter((p)=>{\n        const evaluation = evaluateCards(p.cards);\n        return evaluation.rank === \"멍텅구리구사\";\n    });\n    // 구사가 있을 경우 특별 규칙 적용\n    if (playersWithGusa.length > 0) {\n        // 알리 이하인지 확인\n        const highestNonGusaPlayer = activePlayers.filter((p)=>evaluateCards(p.cards).rank !== \"구사\").sort((a, b)=>{\n            const aEval = evaluateCards(a.cards);\n            const bEval = evaluateCards(b.cards);\n            return bEval.value - aEval.value; // 내림차순 정렬\n        })[0];\n        if (highestNonGusaPlayer) {\n            const highestEval = evaluateCards(highestNonGusaPlayer.cards);\n            if (highestEval.value <= 800) {\n                console.log(\"구사 발생, 최고 패가 알리 이하이므로 재경기\");\n                return {\n                    winnerId: null,\n                    isRegame: true\n                };\n            }\n        }\n    }\n    // 멍텅구리 구사 처리\n    if (playersWithMengGusa.length > 0) {\n        // 최고 패가 장땡(10땡) 이하인지 확인\n        const highestNonMengGusaPlayer = activePlayers.filter((p)=>evaluateCards(p.cards).rank !== \"멍텅구리구사\").sort((a, b)=>{\n            const aEval = evaluateCards(a.cards);\n            const bEval = evaluateCards(b.cards);\n            return bEval.value - aEval.value; // 내림차순 정렬\n        })[0];\n        if (highestNonMengGusaPlayer) {\n            const highestEval = evaluateCards(highestNonMengGusaPlayer.cards);\n            if (highestEval.value <= 1500) {\n                console.log(\"멍텅구리 구사 발생, 최고 패가 장땡 이하이므로 재경기\");\n                return {\n                    winnerId: null,\n                    isRegame: true\n                };\n            }\n        }\n    }\n    // 일반 승자 결정\n    let winnerId = activePlayers[0].id;\n    let winnerCards = activePlayers[0].cards;\n    let winnerEval = evaluateCards(winnerCards);\n    // 각 플레이어의 인덱스를 기억해둠 (자리 순서 판별용)\n    const playerIndices = {};\n    activePlayers.forEach((player, index)=>{\n        playerIndices[player.id] = index;\n    });\n    for(let i = 1; i < activePlayers.length; i++){\n        const result = compareCards(winnerCards, activePlayers[i].cards);\n        if (result === 2) {\n            winnerId = activePlayers[i].id;\n            winnerCards = activePlayers[i].cards;\n            winnerEval = evaluateCards(winnerCards);\n        } else if (result === 0) {\n            // 동점자 처리 (먼저 앉은 사람이 이김)\n            // 인덱스가 더 작은(먼저 앉은) 플레이어가 이김\n            if (playerIndices[activePlayers[i].id] < playerIndices[winnerId]) {\n                winnerId = activePlayers[i].id;\n                winnerCards = activePlayers[i].cards;\n                winnerEval = evaluateCards(winnerCards);\n            }\n        }\n    }\n    return {\n        winnerId,\n        isRegame: false\n    };\n}\n// 3장 중 최적의 2장 조합 찾기\nfunction findBestCombination(cards) {\n    if (!cards || cards.length !== 3) {\n        return cards || [];\n    }\n    // 3장 중 가능한 모든 2장 조합\n    const combinations = [\n        [\n            cards[0],\n            cards[1]\n        ],\n        [\n            cards[0],\n            cards[2]\n        ],\n        [\n            cards[1],\n            cards[2]\n        ]\n    ];\n    // 각 조합 평가\n    const evaluations = combinations.map((combo)=>{\n        const evaluation = evaluateCards(combo);\n        return {\n            cards: combo,\n            rank: evaluation.rank,\n            value: evaluation.value\n        };\n    });\n    // 값이 가장 높은 조합 찾기\n    const bestCombination = evaluations.reduce((best, current)=>{\n        // 구사/멍텅구리구사처럼 음수 값을 가진 특수 족보는 특별 처리\n        const isBestSpecial = best.value < 0;\n        const isCurrentSpecial = current.value < 0;\n        if (isBestSpecial && isCurrentSpecial) {\n            // 둘 다 특수 족보면 값이 큰 것이 이김 (-100 > -200)\n            return best.value > current.value ? best : current;\n        } else if (isBestSpecial) {\n            // best만 특수 족보면 current 선택\n            return current;\n        } else if (isCurrentSpecial) {\n            // current만 특수 족보면 best 유지\n            return best;\n        } else {\n            // 일반 족보는 값이 높은 것이 이김\n            return best.value >= current.value ? best : current;\n        }\n    }, evaluations[0]);\n    return bestCombination.cards;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/utils/gameLogic.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"082c2e6e98ae\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3V0ZGEvLi9zcmMvYXBwL2dsb2JhbHMuY3NzPzc5ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIwODJjMmU2ZTk4YWVcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/game/create/page.tsx":
/*!**************************************!*\
  !*** ./src/app/game/create/page.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\sucha\Desktop\coding\code\sutda\src\app\game\create\page.tsx#default`));


/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n\n\nconst metadata = {\n    title: \"섯다 게임\",\n    description: \"온라인 섯다 게임 서비스\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"ko\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                children: children\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 17,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\layout.tsx\",\n            lineNumber: 16,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\sucha\\\\Desktop\\\\coding\\\\code\\\\sutda\\\\src\\\\app\\\\layout.tsx\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ3VCO0FBRWhCLE1BQU1BLFdBQXFCO0lBQ2hDQyxPQUFPO0lBQ1BDLGFBQWE7QUFDZixFQUFFO0FBRWEsU0FBU0MsV0FBVyxFQUNqQ0MsUUFBUSxFQUdUO0lBQ0MscUJBQ0UsOERBQUNDO1FBQUtDLE1BQUs7a0JBQ1QsNEVBQUNDO3NCQUNDLDRFQUFDQzswQkFBTUo7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJZiIsInNvdXJjZXMiOlsid2VicGFjazovL3N1dGRhLy4vc3JjL2FwcC9sYXlvdXQudHN4PzU3YTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBNZXRhZGF0YSB9IGZyb20gJ25leHQnO1xyXG5pbXBvcnQgJy4vZ2xvYmFscy5jc3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1ldGFkYXRhOiBNZXRhZGF0YSA9IHtcclxuICB0aXRsZTogJ+yEr+uLpCDqsozsnoQnLFxyXG4gIGRlc2NyaXB0aW9uOiAn7Jio65287J24IOyEr+uLpCDqsozsnoQg7ISc67mE7IqkJyxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb3RMYXlvdXQoe1xyXG4gIGNoaWxkcmVuLFxyXG59OiB7XHJcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVxyXG59KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxodG1sIGxhbmc9XCJrb1wiPlxyXG4gICAgICA8Ym9keT5cclxuICAgICAgICA8bWFpbj57Y2hpbGRyZW59PC9tYWluPlxyXG4gICAgICA8L2JvZHk+XHJcbiAgICA8L2h0bWw+XHJcbiAgKVxyXG59ICJdLCJuYW1lcyI6WyJtZXRhZGF0YSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJSb290TGF5b3V0IiwiY2hpbGRyZW4iLCJodG1sIiwibGFuZyIsImJvZHkiLCJtYWluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/@supabase","vendor-chunks/uuid","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/react-hot-toast","vendor-chunks/goober","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fgame%2Fcreate%2Fpage&page=%2Fgame%2Fcreate%2Fpage&appPaths=%2Fgame%2Fcreate%2Fpage&pagePath=private-next-app-dir%2Fgame%2Fcreate%2Fpage.tsx&appDir=C%3A%5CUsers%5Csucha%5CDesktop%5Ccoding%5Ccode%5Csutda%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Csucha%5CDesktop%5Ccoding%5Ccode%5Csutda&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();